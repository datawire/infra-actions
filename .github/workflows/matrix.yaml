name: "Test Matrix"
on:
  push:
    branches:
      - integration/**
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths:
      - .github/workflows/matrix.yaml
      - .github/actions/provision-cluster/**
      - provision-cluster/**
      - '!**/*.md'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  test_matrix_gke:
    strategy:
      matrix:
        client_os: [ubuntu]
        client_arch: [latest]
        clusters:
        - version: "1.27"
          useAuthProvider: "true"
        - version: "1.27"
          useAuthProvider: "false"
        - version: "1.27"
          config: '{ "initialNodeCount" : 2 }'
    runs-on: ${{ matrix.client_os }}-${{ matrix.client_arch }}
    env:
      GKE_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    steps:
      - uses: actions/checkout@v4
      - uses: Azure/setup-kubectl@v3
      - uses: ./provision-cluster
        with:
          distribution: GKE
          version: ${{ matrix.clusters.version }}
          kubeconfig: kubeconfig.yaml
          gkeCredentials: ${{ env.GKE_CREDENTIALS }}
          gkeConfig: ${{ matrix.clusters.config }}
          useAuthProvider: ${{ matrix.clusters.useAuthProvider }}
      - run: |
          kubectl config view
          kubectl version
          kubectl get pods -A
      - name: "validate gke config"
        if: ${{ startsWith(matrix.clusters.config, '{') }}
        run: |
          nodecount=$(kubectl get nodes --no-headers | wc -l | bc)
          if [[ $nodecount == 2 ]]; then
            echo "Gke config was used!"
          else
            echo "Gke config was not used"
            exit 1
          fi

  test_matrix_kubeception:
    strategy:
      matrix:
        client_os: [ubuntu]
        client_arch: [latest]
        clusters:
          - version: "1.27"
    runs-on: ${{ matrix.client_os }}-${{ matrix.client_arch }}
    env:
      KUBECEPTION_TOKEN: ${{ secrets.KUBECEPTION_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: Azure/setup-kubectl@v3
      - uses: ./provision-cluster
        with:
          distribution: Kubeception
          version: ${{ matrix.clusters.version }}
          kubeconfig: kubeconfig.yaml
          kubeceptionToken: ${{ env.KUBECEPTION_TOKEN }}
      - run: |
          kubectl config view
          kubectl version
          kubectl get pods -A
