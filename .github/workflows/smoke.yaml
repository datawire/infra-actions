# This github workflow is for smoke testing the latest release of the actions defined in this
# repo. This workflow is executed whenever this file is changed. That will happen when the "uses"
# line below is updated to reference the latest release as defined in the release process.

name: "Release Smoke Test"
on:
  push:
    paths:
      - '.github/workflows/smoke.yaml'
jobs:
  release_smoke:
    strategy:
      fail-fast: false
      matrix:
        clusters:
         - distribution: GKE
           version: "1.23"
           gcloudCompatible: "true"
           useAuthProvider: "true"

         - distribution: GKE
           version: "1.23"
           gcloudCompatible: "true"
           useAuthProvider: "false"

         - distribution: GKE
           version: "1.23"
           gcloudCompatible: "false"
           useAuthProvider: "true"

         - distribution: GKE
           version: "1.23"
           gcloudCompatible: "false"
           useAuthProvider: "false"

         - distribution: Kubeception
           version: "1.22"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3
        with:
          version: 'v1.25.3'
      # The provision-cluster action will automatically register a cleanup hook to remove the
      # cluster it provisions when the job is done.
      # todo: update once changes are merged
      - id: provision
        uses: datawire/infra-actions/provision-cluster@v0.2.1
        with:
          distribution: ${{ matrix.clusters.distribution }}
          version: ${{ matrix.clusters.version }}
          kubeconfig: ${{ runner.temp}}/kubeconfig.yaml
          kubeceptionToken: ${{ secrets.KUBECEPTION_TOKEN }}
          gkeCredentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          gcloudCompatible: ${{ matrix.clusters.gcloudCompatible }}
          useAuthProvider: ${{ matrix.clusters.useAuthProvider }}
      - name: "Get kubeconfig and cluster information"
        run: |
          set -e
          kubectl config view
          kubectl version --short
          kubectl get pods -A
